o2 sub
  ; punching/nibbling
  ; Parsing arguments:
  o902 if [FIX[[#8 / 1] MOD 2 ] EQ 1]
    G0 
  o902 endif
  o903 if [FIX[[#8 / 2] MOD 2 ] EQ 1]
    G1 
  o903 endif
  #<need_G2> = 0 
  o904 if [FIX[[#8 / 4] MOD 2 ] EQ 1]
    #<need_G2> = 1 
  o904 endif
  #<need_G3> = 0 
  o905 if [FIX[[#8 / 8] MOD 2 ] EQ 1]
    #<need_G3> = 1 
  o905 endif
  o906 if [FIX[[#8 / 16] MOD 2 ] EQ 1]
    G4 
  o906 endif
  o907 if [FIX[[#8 / 32] MOD 2 ] EQ 1]
    G20 
  o907 endif
  o908 if [FIX[[#8 / 64] MOD 2 ] EQ 1]
    G21 
  o908 endif
    #<need_M30> = 0 
  o909 if [FIX[[#8 / 128] MOD 2 ] EQ 1]
    #<need_M30> = 1 
  o909 endif
  #<need_G90> = 0 
  o910 if [[FIX[[#9 / 1] MOD 2 ] EQ 1] OR [#<_absolute>] EQ 1]
    #<need_G90> = 1 
  o910 endif
  G91 
  o912 if [ #1 NE 123456789987654321228]
    #<X_target> = [ #1 - #<need_g90> * #<_x> ]
  o912 else
    #<X_target> = 0
  o912 endif
  o913 if [ #2 NE 123456789987654321228]
    #<Y_target> = [ #2 - #<need_g90> * #<_y> ]
  o913 else
    #<Y_target> = 0
  o913 endif
  o914 if [ #3 NE 123456789987654321228]
    #<A_target> = [ #3 - #<need_g90> * #<_a> ]
  o914 else
    #<A_target> = 0
  o914 endif
  o915 if [ #4 NE 123456789987654321228]
    #<B_target> = [ #4 - #<need_g90> * #<_b> ]
  o915 else
    #<B_target> = 0
  o915 endif
  o916 if [ #7 NE 123456789987654321228]
    #<F_target> = #7
  o916 else
    #<F_target> = #<_feed>
  o916 endif
  #<I_target> = #5
  #<J_target> = #6

  ; End argument parsing. Moving mode:
  o917 if [#<_NIBBLING> EQ 0]
    o918 if [#<need_G2> EQ 1]
      G2 I#<I_target> J#<J_target>
    o918 elseif [#<need_G3> EQ 1]
      G3 I#<I_target> J#<J_target>
    o918 endif
    X#<X_target> Y#<Y_target> A[#<A_target> MOD 360] B[#<B_target> MOD 360] F#<F_target> 
    o919 if [#<_PUNCH> EQ 1]
      M166
    o919 endif
  o917 else
    o920 if [[[#<_motion_mode> EQ 10] OR [#<_motion_mode> EQ 0]] AND [#<need_G2> NE 1] AND [#<need_G3> NE 1]]
     ;linear interpolation 
      (DEBUG, moving from #<_x> to #1 x target in g91: #<X_target>)
      #<path_len>     =   SQRT[ #<X_target> * #<X_target>  + #<Y_target> * #<Y_target> ]
      #<little_steps> =   FUP[ #<path_len> / #<_SPP> ]
      #<_spp>         =   [ #<path_len> / #<little_steps> ]
      (DEBUG, PATH LEN: #<path_len> steps: #<little_steps> SPP: #<spp> my or #<_spp> their)

      o938 if [#<path_len> EQ 0]
        (MSG, Высечка пути нулевой длины! )
        M0
      o938 endif
    
      #<little_step_x>      = [ #<_spp> * #<X_target> / #<path_len> ]
      #<little_step_y>      = [ #<_spp> * #<Y_target> / #<path_len> ]
      #<little_step_a> =  0
      #<little_step_b> =  0
      
      o998 if [ #<_TANGTOOL_EN> EQ 0 ]
        #<little_step_a>      = 0;[ #<A_target> MOD 360 / #<little_steps> ]
        #<little_step_b>      = 0;[ #<B_target> MOD 360 / #<little_steps> ]
      o998 else
        (MSG, Поворот в линейном перемещении)
        (DEBUG,  поворот по А: #<A_target> поворот по B: #<B_target> )
        M0
        ; угол поворота осей
        #<comp_ang> = [[ATAN[#<little_step_x>]/[#<little_step_y>]] MOD 360]
        ; нправление
        #<dir_rot_a> = [ -2 * [[ABS[#<comp_ang> - #<_a> MOD 360] GT 180] - 0.5] ]
        #<dir_rot_b> = [ -2 * [[ABS[#<comp_ang> - #<_a> MOD 360] GT 180] - 0.5] ]
        ; смещение
        #<dir_offcet_a> = [ [360 + #<dir_rot_a> * ABS[#<comp_ang> - #<_a> MOD 360]] MOD 360 ]
        #<dir_offcet_b> = [ [360 + #<dir_rot_b> * ABS[#<comp_ang> - #<_b> MOD 360]] MOD 360 ]
        A[#<dir_rot_a> * #<dir_offcet_a>] B[#<dir_rot_b> * #<dir_offcet_b>]
      o998 endif        
      
      #<little_steps_done> = 0
      o922 while [ #<little_steps_done> LT #<little_steps> ]
        M166
        #<little_steps_done> = [ #<little_steps_done> + 1 ]
        X#<little_step_x> Y#<little_step_y> A#<little_step_a> B#<little_step_b> F#<F_target>
      o922 endwhile
      M166
    
    o920 elseif [[#<_motion_mode> EQ 20]OR[#<need_G2> EQ 1] OR [#<_motion_mode> EQ 30]OR[#<need_G3> EQ 1]]
        ; angle between punches
        #<R__>        = SQRT[#<I_target> * #<I_target> + #<J_target> * #<J_target> ]
        #<dir>        = [2 * [[[#<_motion_mode> EQ 20]OR[#<need_G2> EQ 1]] - 0.5]] 
        #<alpha__deg> = ABS[ASIN[#<_SPP> / [2 * #<R__>]]]
        #<aaa>        = [[ATAN[-#<J_target>]/[-#<I_target>]] MOD 360]
        #<bbb>        = [[ATAN[[#<Y_target> - #<J_target>]]/[[#<X_target> - #<I_target>] ]] MOD 360 ]
        o950 if [ #<dir> EQ -1 ]
            #<target__deg> = [[-#<aaa> + #<bbb>] MOD 360]
        o950 else
            #<target__deg> = [[#<aaa> - #<bbb>] MOD 360]
        o950 endif 
        o957 if [[#<X_target> EQ 0] AND [#<Y_target> EQ 0]]
            #<target__deg> = 360
        o957 endif
        #<little_steps>   = FUP[ #<target__deg> / #<alpha__deg> ]
        #<alpha__deg>      = [ #<target__deg> / #<little_steps> ]
        #<little_step_done> = 0

        o925 while [#<little_step_done> LT #<little_steps>]
          M166
          #<little_step_x> = [#<I_target> * [1 - cos[#<alpha__deg>]] - #<dir> * #<J_target>*sin[#<alpha__deg>]]
          #<little_step_y> = [#<dir> * #<I_target> * [sin[#<alpha__deg>]] + #<J_target>*[1 - cos[#<alpha__deg>]]]
          #<little_step_done> = [#<little_step_done> + 1]
          o994 if [#<_TANGTOOL_EN> EQ 0]
            #<little_step_a> = 0; [[#<A_target> MOD 360] / #<little_steps>]
            #<little_step_b> = 0; [[#<B_target> MOD 360] / #<little_steps>]
          o994 else
            ; угол поворота осей
              #<comp_ang> = [[[- [ATAN[#<little_step_y>]/[#<little_step_x>]]] MOD 360]]; + #<dir> * #<alpha> ] MOD 360]
              ; нправление
              #<dir_rot_a> = [-2 * [[[[#<comp_ang> - #<_a> MOD 360] MOD 360 ] GT 180] - 0.5]]
              #<dir_rot_b> = [-2 * [[[[#<comp_ang> - #<_b> MOD 360] MOD 360 ] GT 180] - 0.5]]
              ; смещение
              #<dir_offcet_a> = [[#<dir_rot_a> * [#<comp_ang> - #<_a> MOD 360] ] MOD 360 ] 
              #<dir_offcet_b> = [[#<dir_rot_a> * [#<comp_ang> - #<_b> MOD 360] ] MOD 360 ]
              #<little_step_a> = [#<dir_rot_a> * #<dir_offcet_a>]
              #<little_step_b> = [#<dir_rot_b> * #<dir_offcet_b>]
          o994 endif
          o951 if [#<dir> EQ -1]
              G3 G17 I#<I_target> J#<J_target> X#<little_step_x> Y#<little_step_y> A#<little_step_a> B#<little_step_b> F#<F_target>
          o951 else
              G2 G17 I#<I_target> J#<J_target> X#<little_step_x> Y#<little_step_y> A#<little_step_a> B#<little_step_b> F#<F_target>
          o951 endif 
          #<I_target> = [#<I_target> - #<little_step_x>]
          #<J_target> = [#<J_target> -  #<little_step_y>]
        o925 endwhile

        M166
    o920 endif
  o917 endif
  o947 if[#<need_G90> EQ 1] 
   G90
  o947 endif
o2 endsub
